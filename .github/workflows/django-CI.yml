name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.13]

    services:
      mysql:
        image: mysql:8.4
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: dockerdjango
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cd ml_project
        pip install -r requirements.txt
        cd ../
        mkdir -p media/models
        cp dataset/limited_model.pkl media/models/limited_models.pkl
    - name: Apply database migrations
      env:
          DATABASE_ENGINE: django.db.backends.mysql
          DATABASE_NAME: dockerdjango
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DEBUG: "True"
          TESTING: "True"
      run: |
        python manage.py migrate
    - name: Run Tests for myapp
      env:
        DATABASE_ENGINE: django.db.backends.mysql
        DATABASE_NAME: dockerdjango
        DATABASE_USERNAME: root
        DATABASE_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
        DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DEBUG: "True"
        TESTING: "True"
        ML_SERVICE_URL: "http://localhost:8001" 
      run: |
        coverage run --rcfile ./config/test/.coveragerc manage.py test myapp
    - name: Run Tests for ml_app
      env:
        DATABASE_ENGINE: django.db.backends.mysql
        DATABASE_NAME: dockerdjango
        DATABASE_USERNAME: root
        DATABASE_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
        DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DEBUG: "True"
        TESTING: "True"
      run: |
        coverage run --rcfile ./config/test/.coveragerc ml_project/manage.py test ml_app
    - name: Generate and output coverage report
      run: |
        coverage report -m
        coverage xml
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
