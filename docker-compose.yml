services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Add a root password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  django-web:
    build: .
    container_name: django-docker
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: "django.db.backends.mysql" # Update to MySQL backend
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      PYTHONPATH: /app
    volumes:
      - .:/app
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env

# ML service integration 
  ml-service:
    build: 
      context: ./ml_service
      dockerfile: Dockerfile
    volumes:
      - ./ml_service:/app
      - ./models:/app/models
    ports:
      - "8001:8001"
    depends_on:
      - django-web
    env_file:
      - .env

volumes:
  mysql_data:
