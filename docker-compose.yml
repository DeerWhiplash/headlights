services:
  db:
    image: mysql:8.4
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    command: --pid-file=/var/run/mysql/mysqld.pid
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  django-web:
    build: .
    container_name: django-docker
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      ml-service:
        condition: service_started
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: "django.db.backends.mysql"
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      ML_SERVICE_URL: "http://ml-service:8001"
      PYTHONPATH: /app
    volumes:
      - .:/app
      - ./media:/app/media
      - ./templates:/app/templates
      - ./static:/app/static
    restart: always
    command: >
      sh -cx "python manage.py migrate 
      && python manage.py create_crud_mappings
      && python manage.py populate_table_lookup
      && python manage.py loaddata myapp/migrations/data_dumps/auth_group_data.json 
      && python manage.py loaddata myapp/migrations/data_dumps/auth_user_data.json
      && python manage.py collectstatic --no-input
      && python manage.py runserver 0.0.0.0:8000 "
    env_file:
      - .env
    networks:
      - app-network

  ml-service:
    build: 
      context: ./ml_project
      dockerfile: Dockerfile
    container_name: ml-service
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: "localhost,ml-service,django-docker"
      DATABASE_ENGINE: "django.db.backends.mysql"
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      PYTHONPATH: /app
    volumes:
      - ./ml_project:/app
      - ./media:/shared/media
      - ./templates:/shared/templates
      - ./static:/shared/static
    restart: always
    command: python manage.py runserver 0.0.0.0:8001
    env_file:
      - .env
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
